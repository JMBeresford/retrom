[package]
name = "retrom-client"
version.workspace = true
authors.workspace = true
repository.workspace = true
license.workspace = true
edition.workspace = true
description = "The Retrom video game library client"
rust-version = "1.80"
exclude = ["**/node_modules"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
name = "Retrom"
path = "src/main.rs"

[build-dependencies]
tauri-build = { version = "2.0.0-rc.7", features = [] }

[dependencies]
tauri = { workspace = true }
serde_json = { workspace = true }
serde = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
retrom-codegen = { workspace = true }
tokio = { workspace = true }
tokio-util = { workspace = true }
tonic = { workspace = true }
prost = { workspace = true }
tauri-plugin-fs = "2.0.0-rc"
dotenvy = { workspace = true }
async-compression = { version = "0.4.11", features = ["all"] }
futures = { workspace = true }
retrom-plugin-installer = { workspace = true }
retrom-plugin-launcher = { workspace = true }
retrom-plugin-service-client = { workspace = true }
retrom-plugin-steam = { workspace = true }
tauri-plugin-dialog = "2.0.0-rc"
tauri-plugin-shell = "2.0.0-rc"
tauri-plugin-process = "2.0.0-rc"
pq-sys = { version = "0.6", features = ["bundled"] }
openssl-sys = { version = "0.9.100", features = ["vendored"] }
tauri-plugin-system-info = "2.0.8"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]

[target.'cfg(not(any(target_os = "android", target_os = "ios")))'.dependencies]
tauri-plugin-single-instance = "2.0.0-rc.0"
tauri-plugin-updater = "2.0.0-rc.2"
