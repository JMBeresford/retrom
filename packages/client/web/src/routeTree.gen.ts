/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as FullscreenLayoutImport } from './routes/_fullscreenLayout'
import { Route as windowedLayoutImport } from './routes/(windowed)/_layout'
import { Route as PlayGameIdLayoutImport } from './routes/play/$gameId/_layout'
import { Route as PlayGameIdLayoutIndexImport } from './routes/play/$gameId/_layout/index'
import { Route as windowedLayoutGamesGameIdIndexImport } from './routes/(windowed)/_layout/games/$gameId/index'

// Create Virtual Routes

const windowedImport = createFileRoute('/(windowed)')()
const PlayGameIdImport = createFileRoute('/play/$gameId')()
const FullscreenLayoutFullscreenIndexLazyImport = createFileRoute(
  '/_fullscreenLayout/fullscreen/',
)()
const windowedLayoutHomeLazyImport = createFileRoute(
  '/(windowed)/_layout/home',
)()
const FullscreenLayoutFullscreenGamesIndexLazyImport = createFileRoute(
  '/_fullscreenLayout/fullscreen/games/',
)()
const PlayGameIdLayoutFrameLazyImport = createFileRoute(
  '/play/$gameId/_layout/frame',
)()
const FullscreenLayoutFullscreenGamesGameIdLazyImport = createFileRoute(
  '/_fullscreenLayout/fullscreen/games/$gameId',
)()

// Create/Update Routes

const windowedRoute = windowedImport.update({
  id: '/(windowed)',
  getParentRoute: () => rootRoute,
} as any)

const FullscreenLayoutRoute = FullscreenLayoutImport.update({
  id: '/_fullscreenLayout',
  getParentRoute: () => rootRoute,
} as any)

const PlayGameIdRoute = PlayGameIdImport.update({
  path: '/play/$gameId',
  getParentRoute: () => rootRoute,
} as any)

const windowedLayoutRoute = windowedLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => windowedRoute,
} as any)

const FullscreenLayoutFullscreenIndexLazyRoute =
  FullscreenLayoutFullscreenIndexLazyImport.update({
    path: '/fullscreen/',
    getParentRoute: () => FullscreenLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_fullscreenLayout/fullscreen/index.lazy').then(
      (d) => d.Route,
    ),
  )

const windowedLayoutHomeLazyRoute = windowedLayoutHomeLazyImport
  .update({
    path: '/home',
    getParentRoute: () => windowedLayoutRoute,
  } as any)
  .lazy(() =>
    import('./routes/(windowed)/_layout/home.lazy').then((d) => d.Route),
  )

const PlayGameIdLayoutRoute = PlayGameIdLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => PlayGameIdRoute,
} as any)

const FullscreenLayoutFullscreenGamesIndexLazyRoute =
  FullscreenLayoutFullscreenGamesIndexLazyImport.update({
    path: '/fullscreen/games/',
    getParentRoute: () => FullscreenLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_fullscreenLayout/fullscreen/games/index.lazy').then(
      (d) => d.Route,
    ),
  )

const PlayGameIdLayoutIndexRoute = PlayGameIdLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => PlayGameIdLayoutRoute,
} as any)

const PlayGameIdLayoutFrameLazyRoute = PlayGameIdLayoutFrameLazyImport.update({
  path: '/frame',
  getParentRoute: () => PlayGameIdLayoutRoute,
} as any).lazy(() =>
  import('./routes/play/$gameId/_layout/frame.lazy').then((d) => d.Route),
)

const FullscreenLayoutFullscreenGamesGameIdLazyRoute =
  FullscreenLayoutFullscreenGamesGameIdLazyImport.update({
    path: '/fullscreen/games/$gameId',
    getParentRoute: () => FullscreenLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_fullscreenLayout/fullscreen/games/$gameId.lazy').then(
      (d) => d.Route,
    ),
  )

const windowedLayoutGamesGameIdIndexRoute =
  windowedLayoutGamesGameIdIndexImport.update({
    path: '/games/$gameId/',
    getParentRoute: () => windowedLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_fullscreenLayout': {
      id: '/_fullscreenLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof FullscreenLayoutImport
      parentRoute: typeof rootRoute
    }
    '/(windowed)': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof windowedImport
      parentRoute: typeof rootRoute
    }
    '/(windowed)/_layout': {
      id: '/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof windowedLayoutImport
      parentRoute: typeof windowedRoute
    }
    '/play/$gameId': {
      id: '/play/$gameId'
      path: '/play/$gameId'
      fullPath: '/play/$gameId'
      preLoaderRoute: typeof PlayGameIdImport
      parentRoute: typeof rootRoute
    }
    '/play/$gameId/_layout': {
      id: '/play/$gameId/_layout'
      path: '/play/$gameId'
      fullPath: '/play/$gameId'
      preLoaderRoute: typeof PlayGameIdLayoutImport
      parentRoute: typeof PlayGameIdRoute
    }
    '/(windowed)/_layout/home': {
      id: '/_layout/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof windowedLayoutHomeLazyImport
      parentRoute: typeof windowedLayoutImport
    }
    '/_fullscreenLayout/fullscreen/': {
      id: '/_fullscreenLayout/fullscreen/'
      path: '/fullscreen'
      fullPath: '/fullscreen'
      preLoaderRoute: typeof FullscreenLayoutFullscreenIndexLazyImport
      parentRoute: typeof FullscreenLayoutImport
    }
    '/_fullscreenLayout/fullscreen/games/$gameId': {
      id: '/_fullscreenLayout/fullscreen/games/$gameId'
      path: '/fullscreen/games/$gameId'
      fullPath: '/fullscreen/games/$gameId'
      preLoaderRoute: typeof FullscreenLayoutFullscreenGamesGameIdLazyImport
      parentRoute: typeof FullscreenLayoutImport
    }
    '/play/$gameId/_layout/frame': {
      id: '/play/$gameId/_layout/frame'
      path: '/frame'
      fullPath: '/play/$gameId/frame'
      preLoaderRoute: typeof PlayGameIdLayoutFrameLazyImport
      parentRoute: typeof PlayGameIdLayoutImport
    }
    '/play/$gameId/_layout/': {
      id: '/play/$gameId/_layout/'
      path: '/'
      fullPath: '/play/$gameId/'
      preLoaderRoute: typeof PlayGameIdLayoutIndexImport
      parentRoute: typeof PlayGameIdLayoutImport
    }
    '/_fullscreenLayout/fullscreen/games/': {
      id: '/_fullscreenLayout/fullscreen/games/'
      path: '/fullscreen/games'
      fullPath: '/fullscreen/games'
      preLoaderRoute: typeof FullscreenLayoutFullscreenGamesIndexLazyImport
      parentRoute: typeof FullscreenLayoutImport
    }
    '/(windowed)/_layout/games/$gameId/': {
      id: '/_layout/games/$gameId/'
      path: '/games/$gameId'
      fullPath: '/games/$gameId'
      preLoaderRoute: typeof windowedLayoutGamesGameIdIndexImport
      parentRoute: typeof windowedLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  FullscreenLayoutRoute: FullscreenLayoutRoute.addChildren({
    FullscreenLayoutFullscreenIndexLazyRoute,
    FullscreenLayoutFullscreenGamesGameIdLazyRoute,
    FullscreenLayoutFullscreenGamesIndexLazyRoute,
  }),
  windowedRoute: windowedRoute.addChildren({
    windowedLayoutRoute: windowedLayoutRoute.addChildren({
      windowedLayoutHomeLazyRoute,
      windowedLayoutGamesGameIdIndexRoute,
    }),
  }),
  PlayGameIdRoute: PlayGameIdRoute.addChildren({
    PlayGameIdLayoutRoute: PlayGameIdLayoutRoute.addChildren({
      PlayGameIdLayoutFrameLazyRoute,
      PlayGameIdLayoutIndexRoute,
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_fullscreenLayout",
        "/",
        "/play/$gameId"
      ]
    },
    "/_fullscreenLayout": {
      "filePath": "_fullscreenLayout.tsx",
      "children": [
        "/_fullscreenLayout/fullscreen/",
        "/_fullscreenLayout/fullscreen/games/$gameId",
        "/_fullscreenLayout/fullscreen/games/"
      ]
    },
    "/": {
      "filePath": "(windowed)",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "(windowed)/_layout.tsx",
      "parent": "/",
      "children": [
        "/_layout/home",
        "/_layout/games/$gameId/"
      ]
    },
    "/play/$gameId": {
      "filePath": "play/$gameId",
      "children": [
        "/play/$gameId/_layout"
      ]
    },
    "/play/$gameId/_layout": {
      "filePath": "play/$gameId/_layout.tsx",
      "parent": "/play/$gameId",
      "children": [
        "/play/$gameId/_layout/frame",
        "/play/$gameId/_layout/"
      ]
    },
    "/_layout/home": {
      "filePath": "(windowed)/_layout/home.lazy.tsx",
      "parent": "/_layout"
    },
    "/_fullscreenLayout/fullscreen/": {
      "filePath": "_fullscreenLayout/fullscreen/index.lazy.tsx",
      "parent": "/_fullscreenLayout"
    },
    "/_fullscreenLayout/fullscreen/games/$gameId": {
      "filePath": "_fullscreenLayout/fullscreen/games/$gameId.lazy.tsx",
      "parent": "/_fullscreenLayout"
    },
    "/play/$gameId/_layout/frame": {
      "filePath": "play/$gameId/_layout/frame.lazy.tsx",
      "parent": "/play/$gameId/_layout"
    },
    "/play/$gameId/_layout/": {
      "filePath": "play/$gameId/_layout/index.tsx",
      "parent": "/play/$gameId/_layout"
    },
    "/_fullscreenLayout/fullscreen/games/": {
      "filePath": "_fullscreenLayout/fullscreen/games/index.lazy.tsx",
      "parent": "/_fullscreenLayout"
    },
    "/_layout/games/$gameId/": {
      "filePath": "(windowed)/_layout/games/$gameId/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
