name: Publish Clients Applications

on:
  workflow_dispatch:
    inputs:
      title:
        description: The name for this draft release. Used for both tag name and release name.
        required: true
        type: string

  pull_request:
  release:
    types: [created]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  CACHE_VERSION: 3

jobs:
  build-desktop-clients:
    name: Build Desktop Clients
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            cache-key-prefix: "macos-latest-aarch64"
            target: "aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            cache-key-prefix: "macos-latest-x86_64"
            target: "x86_64-apple-darwin"
          - platform: "ubuntu-24.04"
            cache-key-prefix: "ubuntu-24.04-x64"
          - platform: "ubuntu-24.04-arm"
            cache-key-prefix: "ubuntu-24.04-aarch64"
          - platform: "windows-latest"
            cache-key-prefix: "windows-latest"
    env:
      PQ_LIB_STATIC: 1
      OUT_DIR: ${{ github.workspace }}/target/${{ matrix.target && '${{ matrix.target }}/' || '' }}
      IS_PROD_RELEASE: ${{ github.event_name == 'release' && !github.event.release.prerelease }}
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ""
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
      APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
      APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
      APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
    permissions:
      contents: write

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ matrix.cache-key-prefix }}-turbo-${{ env.CACHE_VERSION }}-${{ github.sha }}
          restore-keys: |
            ${{ matrix.cache-key-prefix }}-turbo-${{ env.CACHE_VERSION }}

      - name: setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: install Rust stable
        id: rust
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Cache rust build artifacts
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: install dependencies (ubuntu 24 only)
        if: startsWith(matrix.platform, 'ubuntu-24.04') # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libwebkit2gtk-4.1-0=2.44.0-2 \
            libwebkit2gtk-4.1-dev=2.44.0-2 \
            libjavascriptcoregtk-4.1-0=2.44.0-2 \
            libjavascriptcoregtk-4.1-dev=2.44.0-2 \
            gir1.2-javascriptcoregtk-4.1=2.44.0-2 \
            gir1.2-webkit2-4.1=2.44.0-2

      - name: install dependencies (windows only)
        if: matrix.platform == 'windows-latest' # This must match the platform value defined above.
        run: |
          choco install -y postgresql17

      - name: install dependencies (macos m1 only)
        if: matrix.target == '--target aarch64-apple-darwin' # This must match the value defined above.
        run: |
          brew install postgresql@17

      - name: install dependencies (macos intel only)
        if: matrix.target == '--target x86_64-apple-darwin' # This must match the value defined above.
        run: |
          arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          arch -x86_64 /usr/local/bin/brew install postgresql@17

      - name: install frontend dependencies
        run: pnpm install

      - name: build client
        env:
          BUILD_ARGS: ${{ matrix.target && '--target ${{ matrix.target }}' || '' }} ${{ env.IS_RELEASE && '--release' || '--debug' }}
        run: |
          pnpm turbo --filter @retrom/client build

      - name: build updater json
        if: ${{ github.event_name == 'release' }}
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILD_ARGS: ${{ matrix.target }}
        with:
          includeDebug: false
          includeRelease: false
          includeUpdaterJson: true
          tauriScript: echo
          args: --target ${{ matrix.target }}
          updaterJsonPreferNsis: true

      - name: Upload deb bundle
        if: ${{ github.event_name == 'release' }}
        env:
          TARGET_DIR_PREFIX: ${{ github.workspace }}/target/${{ env.IS_PROD_RELEASE && 'release' || 'debug' }}
        uses: actions/upload-artifact@v4
        with:
          name: Debian Bundle
          path: |
            ${{ env.TARGET_DIR_PREFIX }}/**/Retrom*.dmg
            ${{ env.TARGET_DIR_PREFIX }}/**/Retrom*.app
            ${{ env.TARGET_DIR_PREFIX }}/**/Retrom*.app.tar.gz
            ${{ env.TARGET_DIR_PREFIX }}/**/Retrom*.deb
            ${{ env.TARGET_DIR_PREFIX }}/**/Retrom*.rpm
            ${{ env.TARGET_DIR_PREFIX }}/**/Retrom*.AppImage
            ${{ env.TARGET_DIR_PREFIX }}/**/Retrom*.exe
            ${{ env.TARGET_DIR_PREFIX }}/**/Retrom*.msi
            ${{ env.TARGET_DIR_PREFIX }}/**/Retrom*.sig
            ${{ github.workspace }}/latest.json

      # - name: build draft release binary
      #   if: ${{ github.event_name == 'workflow_dispatch' }}
      #   uses: tauri-apps/tauri-action@v0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     BUILD_ARGS: ${{ matrix.target }}
      #   with:
      #     includeDebug: true
      #     includeRelease: false
      #     projectPath: packages/client
      #     tauriScript: pnpm turbo --filter @retrom/client
      #     prerelease: true
      #     releaseDraft: true
      #     releaseName: ${{ inputs.title }}
      #     tagName: ${{ inputs.title }}-pre.${{ github.sha }}
